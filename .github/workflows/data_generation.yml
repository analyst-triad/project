name: Data Generation

on:
  push:
    branches:
      - i200555
  #schedule:
  #  - cron: '0 */12 * * *'  # Run every 12 hours

jobs:
  generate_data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9  # Change to 3.9

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Set Git user information
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Pull data with DVC
      env:
        GDRIVE_CREDENTIALS_DATA: ${{ secrets.GOOGLE_DRIVE }}
      run: |
        dvc pull

    - name: Run data generation script
      run: |
        python append_data.py
      env:
        DATA_FILE_PATH: sensor_data.csv

    - name: Run data preprocessing Script
      run: |
        python preprocess.py
      env:
        DATA_FILE_PATH: sensor_data.csv

    - name: Run Model On Test Data
      run: |
          python test.py
          mv metrics.json new_metrics.json
      env:
          DATA_FILE_PATH: preprocess_data.csv


    - name: Print Files in $GITHUB_WORKSPACE
      run: |
          ls -R $GITHUB_WORKSPACE

    - name: Calculate and log metrics difference
      run: |
        OLD_METRICS=$(cat $OLD_METRICS_FILE_PATH)
        NEW_METRICS=$(cat $NEW_METRICS_FILE_PATH)
        METRICS_DIFFERENCE=$(python -c "import json; old_metrics = json.loads('''$OLD_METRICS'''); new_metrics = json.loads('''$NEW_METRICS'''); metrics_difference = {key: new_metrics[key] - old_metrics.get(key, 0) for key in new_metrics}; print(json.dumps(metrics_difference))")
        echo "$METRICS_DIFFERENCE" > metrics_difference.log
        cat metrics_difference.log
      env:
        OLD_METRICS_FILE_PATH: $GITHUB_WORKSPACE/metrics.json
        NEW_METRICS_FILE_PATH: new_metrics.json

    - name: DVC Add and Commit
      run: |
        git add . 
        git commit -m "DVC commit for data file"

    - uses: iterative/setup-dvc@v1
    - name: Push data with DVC
      env:
        GDRIVE_CREDENTIALS_DATA: ${{ secrets.GOOGLE_DRIVE }}
      run: |
        dvc add sensor_data.csv
        dvc add preprocess_data.csv
        git push
        dvc push